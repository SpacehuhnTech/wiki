<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WiFi Duck on Spacehuhn Wiki</title><link>https://spacehuhn.wiki/wifiduck/</link><description>Recent content in WiFi Duck on Spacehuhn Wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Jun 2020 17:39:59 +0200</lastBuildDate><atom:link href="https://spacehuhn.wiki/wifiduck/index.xml" rel="self" type="application/rss+xml"/><item><title>Content</title><link>https://spacehuhn.wiki/wifiduck/content/</link><pubDate>Sun, 07 Jun 2020 18:31:57 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/content/</guid><description> Disclaimer About Changes Hardware Supported Boards Connections PCB DSTIKE WiFi Duck Flash Software Preparations Flash Atmega32u4 Flash ESP8266 Unbrick Atmega32u4 Usage Ducky Script CLI Debug FAQ Development Edit Web Files Translate Keyboard Layout License Credits Suggest changes Source</description></item><item><title>Disclaimer</title><link>https://spacehuhn.wiki/wifiduck/disclaimer/</link><pubDate>Sun, 07 Jun 2020 18:33:41 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/disclaimer/</guid><description>This is a tool.
It&amp;rsquo;s neither good nor bad.
Use it to do good, to study, and to test.
Never use it to do harm or create damage!
The continuation of this project counts on you!
Suggest changes Source</description></item><item><title>About</title><link>https://spacehuhn.wiki/wifiduck/about/</link><pubDate>Sun, 07 Jun 2020 22:03:50 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/about/</guid><description>By emulating a USB keyboard, this device can be used to remote control a computer, automate tasks or execute software to gain full access. All in the matter of seconds!
This is all possible because keyboards are trusted devices, you plug it in and can start typing right away!
A human might not type very fast, but an automated device like this presses of hundreds of keys per second.
This open source project aims to provide a user-friendly tool to learn about such keystroke injection attacks.</description></item><item><title>Changes</title><link>https://spacehuhn.wiki/wifiduck/changes/</link><pubDate>Sun, 07 Jun 2020 22:06:33 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/changes/</guid><description>Changes since the WiFi Ducky predecessor:
Support for multiple keyboard layouts No size limit per script (other than the physical memory limit) No line length limit for the STRING command Faster typing speed Optional Neopixel or Dotstar LED Entirely new web interface Support for I2C to enable easier debugging and DIY builds Suggest changes Source</description></item><item><title>Flash Software</title><link>https://spacehuhn.wiki/wifiduck/flashsoftware/</link><pubDate>Sun, 07 Jun 2020 22:27:27 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/flashsoftware/</guid><description>Video Tutorial
Preparations Download and install the Arduino IDE. Start the Arduino IDE, go to File &amp;gt; Preferences. At Additional Board Manager ULRs enter https://raw.githubusercontent.com/spacehuhn/hardware/master/wifiduck/package_wifiduck_index.json. You can add multiple URLs, separating them with commas. Go to Tools &amp;gt; Board &amp;gt; Board Manager, search for wifi duck and install WiFi Duck AVR Boards and WiFi Duck ESP8266 Boards. Download and extract this repository or git clone it. If you can&amp;rsquo;t find the COM port of ESP8266 board, then you&amp;rsquo;re probably missing the right drivers.</description></item><item><title>License</title><link>https://spacehuhn.wiki/wifiduck/license/</link><pubDate>Sun, 07 Jun 2020 22:41:48 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/license/</guid><description>This software is licensed under the MIT License. See the license file for details.
Suggest changes Source</description></item><item><title>Credits</title><link>https://spacehuhn.wiki/wifiduck/credits/</link><pubDate>Sun, 07 Jun 2020 22:42:30 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/credits/</guid><description>Other software used for this project:
Arduino Neopixel Library Dotstar Library AVR, ESP8266 &amp;amp; SAMD Arduino Core ESPAsyncTCP ESPAsyncWebServer SimpleCLI Suggest changes Source</description></item></channel></rss>