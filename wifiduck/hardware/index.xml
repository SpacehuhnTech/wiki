<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hardware on Spacehuhn Wiki</title><link>https://spacehuhn.wiki/wifiduck/hardware/</link><description>Recent content in Hardware on Spacehuhn Wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 08 Jun 2020 16:57:26 +0200</lastBuildDate><atom:link href="https://spacehuhn.wiki/wifiduck/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>Requirements</title><link>https://spacehuhn.wiki/wifiduck/hardware/requirements/</link><pubDate>Mon, 08 Jun 2020 17:01:12 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/hardware/requirements/</guid><description>This tool requires following hardware:
An Atmega32u4 based board (for example: Arduino Leonardo or Pro Micro) An ESP8266 or ESP8285 (for example NodeMCU or Wemos d1 mini) [Optional] A single Neopixel (WS2812b) or Dotstar (APA102) LED You will also need a computer and USB data cable to flash the microcontrollers.
If you&amp;rsquo;re a beginner, it&amp;rsquo;s recommended you wire everything together on a breadboard first!
So get a breadboard with a couple of jumper wires.</description></item><item><title>Supported Boards</title><link>https://spacehuhn.wiki/wifiduck/hardware/supportedboards/</link><pubDate>Sun, 07 Jun 2020 22:12:18 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/hardware/supportedboards/</guid><description>You can use any Atmega32u4 or ESP8266 based development board, but if you have no idea where to start, here&amp;rsquo;s a list.
Just remember, you will need both microcontrollers!
The Atmega32u4 is the USB keyboard, the ESP8266 is the WiFi access point.
Atmega32u4 Development Boards Arduino Leonardo Arduino Micro Sparkfun Pro Micro CJMCU Beetle SS Micro DIGISPARK or other ATTINY85 based development boards, are NOT supported!
ESP8266 Development Boards NodeMCU 1.</description></item><item><title>Connections</title><link>https://spacehuhn.wiki/wifiduck/hardware/connections/</link><pubDate>Sun, 07 Jun 2020 22:23:57 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/hardware/connections/</guid><description>Here&amp;rsquo;s a map of the pins that need to be connected.
ESP8266 Atmega32u4 D1 alias GPIO 5 D3 alias SCL D2 alias GPIO 4 D2 alias SDA GND GND Both chips have to be powered in order to work.
To share power between both, you need a voltage regulator that takes 5V and turns it into 3.</description></item><item><title>PCBs</title><link>https://spacehuhn.wiki/wifiduck/hardware/pcb/</link><pubDate>Sun, 07 Jun 2020 22:24:53 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/hardware/pcb/</guid><description>To make the DIY process easier, I designed a small PCB.
Design Files:
Pro Micro + Wemos d1 mini: https://easyeda.com/Spacehuhn/wifi-duck Pro Micro + NodeMCU: https://easyeda.com/Spacehuhn/diy-wifi-duck-pro-micro-nodemcu You can also order them on OSHPark:
Pro Micro + Wemos d1 mini: https://oshpark.com/shared_projects/ARCED9je Pro Micro + NodeMCU: https://oshpark.com/shared_projects/XUuUH1HB You&amp;rsquo;ll have to solder a Pro Micro board on one side and a Wemos d1 mini or NodeMCU board (depending on the PCB) on the other side.</description></item><item><title>DSTIKE WiFi Duck</title><link>https://spacehuhn.wiki/wifiduck/hardware/dstike/</link><pubDate>Sun, 07 Jun 2020 22:26:16 +0200</pubDate><guid>https://spacehuhn.wiki/wifiduck/hardware/dstike/</guid><description>If you like to support this project, Travis Lin sells a custom designed development board which comes preflashed with this software!
You can purchase it here:
tindie DSTIKE AliExpress You can update the ESP8266 over the air and flash the Atmega32u4 via Arduino, all while enclosed in its neat little case.
If you wish to develop your own software or help improve this one, the 8-bit DIP-switch makes it easy for you to access the Atmega32u4 or ESP8266 independently.</description></item></channel></rss>